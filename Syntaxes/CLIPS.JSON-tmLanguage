{
  "name": "CLIPS",
  "scopeName": "source.clips",
  "fileTypes": ["clp", "clips"],
  "foldingStartMarker": "\\(",
  "foldingStopMarker": "\\)",
  "keyEquivalent" : "^~L",
  "patterns": [

    {
        "include": "#comments"
    },

    {
      "match": "\\b(type|default|allowed-values|slot|not|or|and|assert|retract|gensym|printout|declare|salience|modify|export)\\b",
      "name": "keyword.control.clips"
    },

    {
        "name": "constant.language.clips",
        "match": "=>"
    },

    {
      "match": "(\\?)([a-zA-Z0-9_\\-]*)",
      "name": "meta.function.clips",
      "captures": {
       "1": { "name": "keyword.clips" },
       "2": { "name": "variable.parameter" }
      }
    },

    {
      "match": "(^.*(defrule|deffacts|defmodule|deftemplate)[ \\t]+)([a-zA-Z0-9_\\-]+)",
      "captures": {
        "3": { "name": "variable.clips"},
        "2": { "name": "entity.name.function.clips" }
      }
    },

    {
      "match": "(INTEGER|SYMBOL|NONE|DERIVE)",
      "name" : "string"
    },

    {
        "include": "#keywords"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "match" : "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b",
          "name" : "constant.other.color.rgb-value.css"
        },
        {
          "match": "(<-|~|%)",
          "name": "constant.language.clips"
        },
        {
          "match": "(|=|>|\\-|\\+|\\*|\\/|~|%)",
          "name": "constant.language.clips"
        }
      ]
    },
    "comments": {
      "patterns": [
          {
            "match": "(;).*$\\n?",
            "name": "comment.line.comma.clips"
          }
      ]
    }
  },
  "uuid": "1b2ecbe9-9ccb-401d-8707-9440305081df"
}