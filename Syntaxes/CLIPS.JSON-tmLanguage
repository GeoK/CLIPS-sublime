{
  "name": "CLIPS",
  "scopeName": "source.clips",
  "fileTypes": ["clp", "clips"],
  "foldingStartMarker": "\\(",
  "foldingStopMarker": "\\)",
  "keyEquivalent" : "^~L",
  "patterns": [

  {
  	"match": "\\b(slot|not|or|and|assert|retract|gensym|printout|declare|salience|modify)\\b",
  	"name": "support.function.clips"
  },

  {
    "match": "(\\?)([a-zA-Z0-9_\\-]+)",
    "name": "meta.function.clips",
      "captures": {
       "1": { "name": "keyword.control.clips" }
       "2": { "name": "entity.name.function.clips" }
      }
  },

  {
  	"match": "(^.*(defrule|deffacts|defmodule|deftemplate)[ \\t]+)([a-zA-Z0-9_\\-]+)",
  	"name": "meta.function.clips",
		"captures": {
		  "2": { "name": "keyword.control.clips" },
		  "3": { "name": "entity.name.function.clips" }
		}
  },

  {
      "include": "#strings"
  },

  {
      "include": "#comments"
  },

  {
      "include": "#keywords"
  }
  ],
  "repository": {
      "keywords": {
        "patterns": [
            {
                "match": "\\b(s(truct|elect|witch)|c(ontinue|ase)|type|i(nterface|f|mport)|def(er|ault)|package|else|var|f(or|unc|allthrough)|r(eturn|ange)|go(to)?|map|break)\\b",
                "name": "keyword.control.clips"
            },
            {
                "match": "(\\b|(?<=\\]))(int(16|8|32|64)?|uint(16|8|32|ptr|64)?|float(32|64)?|b(yte|ool)|string)\\b",
                "name": "storage.type.clips"
            },
            {
                "match": "\\b(const|chan)\\b",
                "name": "storage.modifier.clips"
            },
            {
                "match": "\\b(nil|true|false|iota)\\b",
                "name": "constant.language.clips"
            },
            {
                "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b",
                "name": "constant.numeric.clips"
            },
            {
                "match": "(!|&&|=>|\\|\\|)",
                "name": "constant.language.clips"
            },
        {
            "match": "(\\- |\\+|\\*|\\/|~|%)",
            "name": "constant.language.clips"
        },
            {
                "match": "(<\\-)",
                "name": "constant.language.clips"
            }
        ]
      },
      "comments": {
          "patterns": [
              {
                  "captures": {
                      "1": {
                          "name": "punctuation.definition.comment.clips"
                      }
                  },
                  "match": "(;).*$\\n?",
                  "name": "comment.line.comma.clips"
              }
          ]
      },
      "strings": {
          "patterns": [
              {
                  "begin": "\"",
                  "beginCaptures": {
                      "0": {
                          "name": "punctuation.definition.string.begin.d"
                      }
                  },
                  "end": "\"",
                  "endCaptures": {
                      "0": {
                          "name": "punctuation.definition.string.end.d"
                      }
                  },
                  "name": "string.quoted.double.d",
                  "patterns": [
                      {
                          "include": "#string_escaped_char"
                      }
                  ]
              },
              {
                  "begin": "(r)(\")",
                  "beginCaptures": {
                      "1": {
                          "name": "storage.type.string.d"
                      },
                      "2": {
                          "name": "punctuation.definition.string.begin.d"
                      }
                  },
                  "end": "((?<=\")(\")|\")",
                  "endCaptures": {
                      "1": {
                          "name": "punctuation.definition.string.end.d"
                      },
                      "2": {
                          "name": "meta.empty-string.double.d"
                      }
                  },
                  "name": "string.quoted.double.raw.d",
                  "patterns": [
                      {
                          "include": "#regular_expressions"
                      }
                  ]
              },
              {
                  "begin": "`",
                  "beginCaptures": {
                      "0": {
                          "name": "punctuation.definition.string.begin.d"
                      }
                  },
                  "end": "((?<=`)(`)|`)",
                  "endCaptures": {
                      "1": {
                          "name": "punctuation.definition.string.end.d"
                      },
                      "2": {
                          "name": "meta.empty-string.double.d"
                      }
                  },
                  "name": "string.quoted.double.raw.backtick.d"
              },
              {
                  "begin": "'",
                  "beginCaptures": {
                      "0": {
                          "name": "punctuation.definition.string.begin.d"
                      }
                  },
                  "end": "'",
                  "endCaptures": {
                      "0": {
                          "name": "punctuation.definition.string.end.d"
                      }
                  },
                  "name": "string.quoted.single.d",
                  "patterns": [
                      {
                          "include": "#string_escaped_char"
                      }
                  ]
              }
          ]
      }
  },
  "uuid": "1b2ecbe9-9ccb-401d-8707-9440305081df"
}